<Window x:Class="CloverLeaf.Desktop.Views.Shell"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:CloverLeaf.Desktop"
        xmlns:prism="http://prismlibrary.com/"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" 
        xmlns:core="clr-namespace:CloverLeaf.Common.Infrastructure;assembly=CloverLeaf.Common.Infrastructure"
        mc:Ignorable="d" 
        Title="CloverLeaf" Height="600" Width="900"
        ResizeMode="NoResize" WindowStartupLocation="CenterScreen"
        WindowStyle="None" AllowsTransparency="True" Background="#00FFFFFF"
        prism:ViewModelLocator.AutoWireViewModel="False">
    <Window.InputBindings>
        <KeyBinding Modifiers="Ctrl+Alt" Key="S" Command="{Binding SaveContestAsCommand}"/>
        <KeyBinding Modifiers="Ctrl" Key="S" Command="{Binding SaveContestCommand}"/>
        <KeyBinding Modifiers="Ctrl+Alt" Key="R" Command="{Binding StartOverCommand}"/>
        <KeyBinding Modifiers="Ctrl" Key="O" Command="{Binding LoadContestCommand}"/>
    </Window.InputBindings>
    <Border Margin="10">
        <Border.Effect>
            <DropShadowEffect Color="Black" Direction="270" BlurRadius="10" ShadowDepth="3" />
        </Border.Effect>

        <Grid Background="#FFFFFF">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="350"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <Image Source="{DynamicResource BackgroundImage}" RenderOptions.BitmapScalingMode="HighQuality" RenderOptions.EdgeMode="Aliased" Stretch="Fill">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseDown">
                        <prism:InvokeCommandAction Command="{Binding MoveCommand}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <Image.InputBindings>
                    <MouseBinding MouseAction="LeftDoubleClick" Command="{Binding ImageDoubleCommand}"/>
                </Image.InputBindings>
            </Image>

            <Grid Grid.Column="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="40"/>
                    <ColumnDefinition Width="40"/>
                </Grid.ColumnDefinitions>

                <Grid.RowDefinitions>
                    <RowDefinition Height="40" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <TextBlock Grid.ColumnSpan="4" Grid.Column="0" FontWeight="Bold" FontSize="15" VerticalAlignment="Stretch" Padding="10" TextAlignment="Center" Opacity=".8">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseDown">
                            <prism:InvokeCommandAction Command="{Binding MoveCommand}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    Clover<Run Foreground="{DynamicResource AuxBrush}">Leaf</Run>
                </TextBlock>
                
                <Border BorderBrush="#00FFFFFF" BorderThickness="0" Padding="3">
                    <Border.RenderTransform>
                        <ScaleTransform ScaleX="1" ScaleY="1" CenterX="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Border}, Path=ActualWidth, Converter={StaticResource HalfDoubleConverter}}" CenterY="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Border}, Path=ActualHeight, Converter={StaticResource HalfDoubleConverter}}"/>
                    </Border.RenderTransform>
                    <Border.Style>
                        <Style>
                            <Style.Triggers>
                                <Trigger Property="Border.IsMouseOver" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" 
                                                             From="1" To="1.07" BeginTime="00:00:00" Duration="00:00:0.3" />
                                                <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" 
                                                             From="1" To="1.07" BeginTime="00:00:00" Duration="00:00:0.3" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" 
                                                             From="1.07" To="1" BeginTime="00:00:00" Duration="00:00:0.2" />
                                                <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" 
                                                             From="1.07" To="1" BeginTime="00:00:00" Duration="00:00:0.2" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <!--
                                        <DataTrigger Binding="{Binding Coordinator.CanSave}" Value="True">
                                            <DataTrigger.EnterActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).Children[1].Angle" 
                                                             From="0" To="360" BeginTime="00:00:00" Duration="00:00:0.5" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </DataTrigger.EnterActions>
                                            <DataTrigger.ExitActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).Children[1].Angle" 
                                                             From="360" To="0" BeginTime="00:00:00" Duration="00:00:0.5" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </DataTrigger.ExitActions>
                                        </DataTrigger>
                                        -->
                                <DataTrigger Binding="{Binding Coordinator.CanSave}" Value="True">
                                    <DataTrigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ThicknessAnimation Storyboard.TargetProperty="Padding" From="0" To="35 0 0 0" Duration="00:00:0.2" />
                                                <!--
                                                <ThicknessAnimation Storyboard.TargetProperty="Padding" From="35 0 0 0" To="35 0 0 3" BeginTime="00:00:03" Duration="00:00:0.2" RepeatBehavior="Forever"  />
                                                <ThicknessAnimation Storyboard.TargetProperty="Padding" From="35 0 0 3" To="35 0 0 0" BeginTime="00:00:03.2" Duration="00:00:0.2" RepeatBehavior="Forever" />
                                                -->
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.EnterActions>
                                    <DataTrigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ThicknessAnimation Storyboard.TargetProperty="Margin" From="35 0 0 0" To="0" Duration="00:00:0.2" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.ExitActions>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>
                    <Button Style="{DynamicResource ImageButton}" Command="{Binding SaveContestCommand}" Visibility="{Binding Coordinator.CanSave, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}">
                        <Image Name="SaveImage" Source="{DynamicResource SaveImage}"  RenderOptions.BitmapScalingMode="HighQuality" RenderOptions.EdgeMode="Aliased">
                            <Image.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="1" ScaleY="1" CenterX="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Image}, Path=ActualWidth, Converter={StaticResource HalfDoubleConverter}}" CenterY="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Image}, Path=ActualHeight, Converter={StaticResource HalfDoubleConverter}}"/>
                                    <RotateTransform CenterX="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Image}, Path=ActualWidth, Converter={StaticResource HalfDoubleConverter}}" CenterY="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Image}, Path=ActualHeight, Converter={StaticResource HalfDoubleConverter}}" Angle="0"/>
                                </TransformGroup>
                            </Image.RenderTransform>
                        </Image>
                    </Button>
                </Border>
                

                
                <Border BorderThickness="0" BorderBrush="#00FFFFFF" Padding="3" HorizontalAlignment="Left">
                    <Button Name="MenuButton" ContextMenuService.Placement="Right" ContextMenuService.VerticalOffset="-3" Style="{DynamicResource ImageButton}" IsEnabled="{Binding MenuActive, Mode=OneWay}" >
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <prism:InvokeCommandAction Command="{Binding OpenMenuCommand}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <Button.ContextMenu>
                            <ContextMenu Name="MainMenu" Background="{DynamicResource MainBrush}" PlacementTarget="{Binding ElementName=MenuButton}">
                                <MenuItem IsEnabled="{Binding Coordinator.CanSave}" InputGestureText="Ctrl + S" Command="{Binding SaveContestCommand}" Template="{DynamicResource SolidMenuItem}" Background="{DynamicResource MainBrush}">
                                    <MenuItem.Header>
                                        <TextBlock Text="Save Contest" Opacity=".7" Foreground="{DynamicResource AuxBrush}" FontWeight="Bold"/>
                                    </MenuItem.Header>
                                </MenuItem>
                                <MenuItem InputGestureText="Ctrl + Alt + S" Command="{Binding SaveContestAsCommand}" Template="{DynamicResource SolidMenuItem}" Background="{DynamicResource MainBrush}">
                                    <MenuItem.Header>
                                        <TextBlock Text="Save Contest As..." Opacity=".7" Foreground="{DynamicResource AuxBrush}" FontWeight="Bold"/>
                                    </MenuItem.Header>
                                </MenuItem>
                                <MenuItem InputGestureText="Ctrl + O" Command="{Binding LoadContestCommand}" Template="{DynamicResource SolidMenuItem}" Background="{DynamicResource MainBrush}">
                                    <MenuItem.Header>
                                        <TextBlock Text="Load Contest" Opacity=".7" Foreground="{DynamicResource AuxBrush}" FontWeight="Bold"/>
                                    </MenuItem.Header>
                                </MenuItem>
                                <MenuItem InputGestureText="Ctrl + Alt + R" Command="{Binding StartOverCommand}" Template="{DynamicResource SolidMenuItem}" Background="{DynamicResource MainBrush}">
                                    <MenuItem.Header>
                                        <TextBlock Text="Start Over" Opacity=".7" Foreground="{DynamicResource AuxBrush}" FontWeight="Bold"/>
                                    </MenuItem.Header>
                                </MenuItem>
                            </ContextMenu>
                        </Button.ContextMenu>
                        <Image Source="{DynamicResource CloverLeafImage}" RenderOptions.BitmapScalingMode="HighQuality" RenderOptions.EdgeMode="Aliased" Stretch="Uniform">
                            <Image.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="0" ScaleY="0" CenterX="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Image}, Path=ActualWidth, Converter={StaticResource HalfDoubleConverter}}" CenterY="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Image}, Path=ActualHeight, Converter={StaticResource HalfDoubleConverter}}"/>
                                    <RotateTransform CenterX="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Image}, Path=ActualWidth, Converter={StaticResource HalfDoubleConverter}}" CenterY="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Image}, Path=ActualHeight, Converter={StaticResource HalfDoubleConverter}}" Angle="0"/>
                                </TransformGroup>
                            </Image.RenderTransform>
                            <Image.Style>
                                <Style TargetType="Image">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding MenuActive, Mode=OneWay}" Value="True">
                                            <DataTrigger.EnterActions>
                                                <BeginStoryboard>
                                                    <Storyboard BeginTime="00:00:01">
                                                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).Children[0].ScaleX" From="0" To="1.2" Duration="00:00:0.2"/>
                                                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).Children[0].ScaleY" From="0" To="1.2" Duration="00:00:0.2"/>
                                                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).Children[0].ScaleX" BeginTime="00:00:.2" From="1.3" To="1" Duration="00:00:0.4"/>
                                                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).Children[0].ScaleY" BeginTime="00:00:.2" From="1.3" To="1" Duration="00:00:0.4"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </DataTrigger.EnterActions>
                                            <DataTrigger.ExitActions>
                                                <BeginStoryboard>
                                                    <Storyboard BeginTime="00:00:0.5">
                                                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).Children[0].ScaleX" From="1" To="0" Duration="00:00:0.2"/>
                                                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).Children[0].ScaleY" From="1" To="0" Duration="00:00:0.2"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </DataTrigger.ExitActions>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding MenuOpen}" Value="True">
                                            <DataTrigger.EnterActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).Children[1].Angle" 
                                                             From="-45" To="720" BeginTime="00:00:00" Duration="00:00:0.3" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </DataTrigger.EnterActions>
                                        </DataTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="Image.IsMouseOver" Value="True"/>
                                                <!--
                                                <Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}, Path=ContextMenu.IsOpen}" Value="False"/>
                                                -->
                                                
                                            </MultiTrigger.Conditions>
                                            <MultiTrigger.EnterActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).Children[1].Angle" 
                                                             From="0" To="-45" BeginTime="00:00:00" Duration="00:00:0.1" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </MultiTrigger.EnterActions>
                                            <MultiTrigger.ExitActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).Children[1].Angle" 
                                                             From="-45" To="0" BeginTime="00:00:00" Duration="00:00:0.1" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </MultiTrigger.ExitActions>
                                        </MultiTrigger>
                                        <!--
                                        <Trigger Property="Image.IsMouseOver" Value="True">
                                            <Trigger.EnterActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).Children[1].Angle" 
                                                             From="0" To="-45" BeginTime="00:00:00" Duration="00:00:0.1" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </Trigger.EnterActions>
                                            <Trigger.ExitActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).Children[1].Angle" 
                                                             From="-45" To="0" BeginTime="00:00:00" Duration="00:00:0.1" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </Trigger.ExitActions>
                                        </Trigger>
                                        -->
                                        <!--
                                        <EventTrigger RoutedEvent="Image.MouseLeftButtonUp">
                                            <EventTrigger.EnterActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).Children[1].Angle" 
                                                             From="-45" To="720" BeginTime="00:00:00" Duration="00:00:0.3" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger.EnterActions>
                                        </EventTrigger>
                                        -->
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                    </Button>
                </Border>

                

                

                <!--
                <Menu Grid.Column="1" HorizontalAlignment="Left" Background="{DynamicResource MainBrush}" BorderThickness="0">
                    <Menu.ItemsPanel>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel Orientation="Horizontal"/>
                        </ItemsPanelTemplate>
                    </Menu.ItemsPanel>
                    <MenuItem Background="#333333" Name="MainMenu" Width="50" Height="50" BorderThickness="0" IsSubmenuOpen="{Binding MenuOpen, Mode=OneWayToSource, UpdateSourceTrigger=PropertyChanged}">

                       
                        <MenuItem  Template="{DynamicResource SolidMenuItem}" Background="{DynamicResource MainBrush}">
                            <MenuItem.Header>
                                <TextBlock Text="Load Contest" Opacity=".7" Foreground="{DynamicResource AuxBrush}" FontWeight="Bold"/>
                            </MenuItem.Header>
                        </MenuItem>
                        <MenuItem Template="{DynamicResource SolidMenuItem}" Background="{DynamicResource MainBrush}">
                            <MenuItem.Header>
                                <TextBlock Text="Save Contest" Opacity=".7" Foreground="{DynamicResource AuxBrush}" FontWeight="Bold"/>
                            </MenuItem.Header>
                        </MenuItem>
                    </MenuItem>
                </Menu>
                -->

                <!--
                        <MenuItem.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding MenuOpen}" Value="True">
                                        <DataTrigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetProperty="Height" BeginTime="00:00:00" From="0" To="30" Duration="00:00:0.2"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.EnterActions>
                                        <DataTrigger.ExitActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetProperty="Height" BeginTime="00:00:00" From="30" To="0" Duration="00:00:0.2"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.ExitActions>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </MenuItem.Style>
                        -->

                <Button Style="{DynamicResource ImageButton}" Grid.Column="2" Command="{Binding MinimizeCommand}" Background="Transparent">
                    <Image Source="{DynamicResource MinimizeImage}" Stretch="Uniform" RenderOptions.BitmapScalingMode="HighQuality" RenderOptions.EdgeMode="Aliased"/>
                </Button>
                <Button Grid.Column="3" Command="{Binding CloseCommand}" Background="Transparent" Style="{DynamicResource ImageButton}">
                    <Image Source="{DynamicResource CloseImage}" Stretch="Uniform" RenderOptions.BitmapScalingMode="HighQuality" RenderOptions.EdgeMode="Aliased"/>
                </Button>

                <ContentControl Grid.Row="1" Grid.ColumnSpan="4" prism:RegionManager.RegionName="{x:Static core:Core.MAIN_REGION}"/>
            </Grid>
        </Grid>
    </Border>
    <!--
    <DockPanel>
        <Image DockPanel.Dock="Left" Source="{DynamicResource BackgroundImage}" />
        <ContentControl />
    </DockPanel>
    -->

    
</Window>
